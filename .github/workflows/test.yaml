name: Test Lambdas

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SAM_CLI_TELEMETRY: 0
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: 576758376358.dkr.ecr.us-east-1.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Setup Node 14
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Update NPM
        run: npm i -g npm@latest

      - name: Install CDK
        run: npm i -g aws-cdk

      - name: Install Dependencies
        run: |
          npm i
          npm i -g esbuild

      - name: Make Logs Directory
        run: mkdir logs

      - name: CDK Synth
        run: npm run synth

      - name: Poller Lambda
        run: |
          sam local invoke VodPoller741EDAA0 --env-vars env.json --no-event -l logs/poller.txt

      - name: Test Poller
        uses: pillargg/sam-ots@master
        with:
          file: ./logs/poller.txt

      - name: SignUp Poller Lambda
        run: |
          sam local invoke VodPoller741EDAA0 --env-vars env.json --event test_events/signupPollerEvent.json -l logs/signup.txt

      - name: Test SignUp Poller
        uses: pillargg/sam-ots@master
        with:
          file: ./logs/signup.txt

      - name: CCC Finder Lambda
        run: |
          sam local invoke CCCFinder4C010E91 --env-vars env.json --event test_events/inputEvent.json -l logs/cccfinder.txt

      - name: Test CCC Finder
        uses: pillargg/sam-ots@master
        with:
          file: ./logs/cccfinder.txt

      - name: Manual Clip Lambda
        run: |
          sam local invoke ManualClipD684F488 --env-vars env.json --event test_events/downloadOutput.json -l logs/manualclip.txt

      - name: Test Manual Clip
        uses: pillargg/sam-ots@master
        with:
          file: ./logs/manualclip.txt

      - name: Downloader Lambda
        run: |
          sam local invoke ChatDownloader326B83C0 --env-vars env.json --event test_events/inputEvent.json -l logs/downloader.txt

      - name: Test Downloader
        uses: pillargg/sam-ots@master
        with:
          file: ./logs/downloader.txt

      - name: Thumbnail Generator Lambda
        run: |
          cd lambdas/thumbnailgenerator
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" > docker.env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> docker.env
          echo "AWS_REGION=us-east-1" >> docker.env
          echo "DEFAULT_AWS_REGION=us-east-1" >> docker.env
          echo "AWS_LAMBDA_FUNCTION_MEMORY_SIZE=1280" >> docker.env
          echo "BUCKET=slstack-thumbnailstore34588c07-lhe6y4k64g5k" >> docker.env
          docker build -t thumbnail-test .
          docker run -d -p 9000:8080 --env-file docker.env thumbnail-test
          export data=$(jq '.' -c ../../test_events/thumbnailGeneratorEvent.json)
          curl -XPOST "http://localhost:9000/2015-03-31/functions/function/invocations" -d $data > ../../logs/thumbnail.json

      - name: Test Generator
        uses: pillargg/sam-ots@master
        with:
          file: ./logs/thumbnail.json
