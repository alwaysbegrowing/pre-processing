Resources:
  MessageStore60E7AFC8:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Dev-Timestamps/MessageStore/Resource
  MessageStoreNotifications0C91F785:
    Type: Custom::S3BucketNotifications
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
          - Arn
      BucketName:
        Ref: MessageStore60E7AFC8
      NotificationConfiguration:
        LambdaFunctionConfigurations:
          - Events:
              - s3:ObjectCreated:*
            LambdaFunctionArn:
              Fn::GetAtt:
                - ClipFinderA73374EE
                - Arn
          - Events:
              - s3:ObjectCreated:*
            LambdaFunctionArn:
              Fn::GetAtt:
                - ManualClipD684F488
                - Arn
    DependsOn:
      - MessageStoreAllowBucketNotificationsToDevTimestampsClipFinderA2E23893A00A4BC9
      - MessageStoreAllowBucketNotificationsToDevTimestampsManualClip9C85548190CACF07
    Metadata:
      aws:cdk:path: Dev-Timestamps/MessageStore/Notifications/Resource
  MessageStoreAllowBucketNotificationsToDevTimestampsClipFinderA2E23893A00A4BC9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ClipFinderA73374EE
          - Arn
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::GetAtt:
          - MessageStore60E7AFC8
          - Arn
    Metadata:
      aws:cdk:path: Dev-Timestamps/MessageStore/AllowBucketNotificationsToDevTimestampsClipFinderA2E23893
  MessageStoreAllowBucketNotificationsToDevTimestampsManualClip9C85548190CACF07:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ManualClipD684F488
          - Arn
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::GetAtt:
          - MessageStore60E7AFC8
          - Arn
    Metadata:
      aws:cdk:path: Dev-Timestamps/MessageStore/AllowBucketNotificationsToDevTimestampsManualClip9C855481
  ThumbnailStore34588C07:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Dev-Timestamps/ThumbnailStore/Resource
  ReadyForDownloadsEEACEEFF:
    Type: AWS::SNS::Topic
    Metadata:
      aws:cdk:path: Dev-Timestamps/ReadyForDownloads/Resource
  vodDataRequestedFA4189D1:
    Type: AWS::SNS::Topic
    Metadata:
      aws:cdk:path: Dev-Timestamps/vodDataRequested/Resource
  ThumbnailGeneratorTopicFF9CDA5D:
    Type: AWS::SNS::Topic
    Metadata:
      aws:cdk:path: Dev-Timestamps/ThumbnailGeneratorTopic/Resource
  VodPollerServiceRole369446BC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Dev-Timestamps/VodPoller/ServiceRole/Resource
  VodPollerServiceRoleDefaultPolicy1E3562C9:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - MessageStore60E7AFC8
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MessageStore60E7AFC8
                        - Arn
                    - /*
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource: arn:aws:secretsmanager:us-east-1:576758376358:secret:TWITCH_CLIENT_SECRET-OyAp7V
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource: arn:aws:secretsmanager:us-east-1:576758376358:secret:MONGODB_FULL_URI-DBSAtt
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: ReadyForDownloadsEEACEEFF
        Version: "2012-10-17"
      PolicyName: VodPollerServiceRoleDefaultPolicy1E3562C9
      Roles:
        - Ref: VodPollerServiceRole369446BC
    Metadata:
      aws:cdk:path: Dev-Timestamps/VodPoller/ServiceRole/DefaultPolicy/Resource
  VodPoller741EDAA0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 59c10cace4978fc33b211519aabceef044bd4b6646647ee990d1593e4b457430.zip
      Role:
        Fn::GetAtt:
          - VodPollerServiceRole369446BC
          - Arn
      Description: Checks for VODs
      Environment:
        Variables:
          BUCKET:
            Ref: MessageStore60E7AFC8
          TWITCH_CLIENT_ID: 2nakqoqdxka9v5oekyo6742bmnxt2o
          TOPIC:
            Ref: ReadyForDownloadsEEACEEFF
          DB_NAME: dev
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.main
      MemorySize: 256
      Runtime: nodejs14.x
      Timeout: 60
    DependsOn:
      - VodPollerServiceRoleDefaultPolicy1E3562C9
      - VodPollerServiceRole369446BC
    Metadata:
      aws:cdk:path: Dev-Timestamps/VodPoller/Resource
      aws:asset:path: /home/chandler/Documents/pillar/timestamps/cdk.out/asset.59c10cace4978fc33b211519aabceef044bd4b6646647ee990d1593e4b457430
      aws:asset:property: Code
  ThumbnailGeneratorServiceRole82D7629D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Dev-Timestamps/ThumbnailGenerator/ServiceRole/Resource
  ThumbnailGeneratorServiceRoleDefaultPolicy29AA581D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ThumbnailStore34588C07
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ThumbnailStore34588C07
                        - Arn
                    - /*
          - Action: s3:PutObjectAcl
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - ThumbnailStore34588C07
                      - Arn
                  - /*
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource: arn:aws:secretsmanager:us-east-1:576758376358:secret:MONGODB_FULL_URI-DBSAtt
        Version: "2012-10-17"
      PolicyName: ThumbnailGeneratorServiceRoleDefaultPolicy29AA581D
      Roles:
        - Ref: ThumbnailGeneratorServiceRole82D7629D
    Metadata:
      aws:cdk:path: Dev-Timestamps/ThumbnailGenerator/ServiceRole/DefaultPolicy/Resource
  ThumbnailGenerator01BB1F8C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:685029302ac518b56c9b5ac79398480f30ef9457c66123ac7f2f367bef3703a4
      Role:
        Fn::GetAtt:
          - ThumbnailGeneratorServiceRole82D7629D
          - Arn
      Description: Generates thumbnails for each clip generated by ClipFinder
      Environment:
        Variables:
          BUCKET:
            Ref: ThumbnailStore34588C07
          DB_NAME: dev
          TOPIC:
            Ref: ThumbnailGeneratorTopicFF9CDA5D
      MemorySize: 1280
      PackageType: Image
      Timeout: 900
    DependsOn:
      - ThumbnailGeneratorServiceRoleDefaultPolicy29AA581D
      - ThumbnailGeneratorServiceRole82D7629D
    Metadata:
      aws:cdk:path: Dev-Timestamps/ThumbnailGenerator/Resource
  ThumbnailGeneratorAllowInvokeDevTimestampsThumbnailGeneratorTopicD4C06AF9DD2EA749:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ThumbnailGenerator01BB1F8C
          - Arn
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: ThumbnailGeneratorTopicFF9CDA5D
    Metadata:
      aws:cdk:path: Dev-Timestamps/ThumbnailGenerator/AllowInvoke:DevTimestampsThumbnailGeneratorTopicD4C06AF9
  ThumbnailGeneratorThumbnailGeneratorTopicF8D2D3EA:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      TopicArn:
        Ref: ThumbnailGeneratorTopicFF9CDA5D
      Endpoint:
        Fn::GetAtt:
          - ThumbnailGenerator01BB1F8C
          - Arn
    Metadata:
      aws:cdk:path: Dev-Timestamps/ThumbnailGenerator/ThumbnailGeneratorTopic/Resource
  CheckForVods8A3957E1:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(*/5 * * * ? *)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - VodPoller741EDAA0
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: Dev-Timestamps/CheckForVods/Resource
  CheckForVodsAllowEventRuleDevTimestampsVodPoller260FF292A5D49C79:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - VodPoller741EDAA0
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - CheckForVods8A3957E1
          - Arn
    Metadata:
      aws:cdk:path: Dev-Timestamps/CheckForVods/AllowEventRuleDevTimestampsVodPoller260FF292
  ChatDownloaderServiceRole613C36DF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Dev-Timestamps/ChatDownloader/ServiceRole/Resource
  ChatDownloaderServiceRoleDefaultPolicy0779E838:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - MessageStore60E7AFC8
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MessageStore60E7AFC8
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: ChatDownloaderServiceRoleDefaultPolicy0779E838
      Roles:
        - Ref: ChatDownloaderServiceRole613C36DF
    Metadata:
      aws:cdk:path: Dev-Timestamps/ChatDownloader/ServiceRole/DefaultPolicy/Resource
  ChatDownloader326B83C0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 7e0b4757e61c32cca0d684794529d04add84b682091b0b591894faf69a34d94d.zip
      Role:
        Fn::GetAtt:
          - ChatDownloaderServiceRole613C36DF
          - Arn
      Description: Downloads chat and saves to S3
      Environment:
        Variables:
          BUCKET:
            Ref: MessageStore60E7AFC8
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.main
      MemorySize: 1280
      Runtime: nodejs14.x
      Timeout: 900
    DependsOn:
      - ChatDownloaderServiceRoleDefaultPolicy0779E838
      - ChatDownloaderServiceRole613C36DF
    Metadata:
      aws:cdk:path: Dev-Timestamps/ChatDownloader/Resource
      aws:asset:path: /home/chandler/Documents/pillar/timestamps/cdk.out/asset.7e0b4757e61c32cca0d684794529d04add84b682091b0b591894faf69a34d94d
      aws:asset:property: Code
  ChatDownloaderAllowInvokeDevTimestampsReadyForDownloads8F782FBDF7058709:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ChatDownloader326B83C0
          - Arn
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: ReadyForDownloadsEEACEEFF
    Metadata:
      aws:cdk:path: Dev-Timestamps/ChatDownloader/AllowInvoke:DevTimestampsReadyForDownloads8F782FBD
  ChatDownloaderReadyForDownloadsBF8E5B32:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      TopicArn:
        Ref: ReadyForDownloadsEEACEEFF
      Endpoint:
        Fn::GetAtt:
          - ChatDownloader326B83C0
          - Arn
    Metadata:
      aws:cdk:path: Dev-Timestamps/ChatDownloader/ReadyForDownloads/Resource
  ClipFinderServiceRole28A544E9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Dev-Timestamps/ClipFinder/ServiceRole/Resource
  ClipFinderServiceRoleDefaultPolicyAFBF3421:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource: arn:aws:secretsmanager:us-east-1:576758376358:secret:TWITCH_CLIENT_SECRET-OyAp7V
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: ThumbnailGeneratorTopicFF9CDA5D
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - MessageStore60E7AFC8
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MessageStore60E7AFC8
                        - Arn
                    - /*
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource: arn:aws:secretsmanager:us-east-1:576758376358:secret:MONGODB_FULL_URI-DBSAtt
        Version: "2012-10-17"
      PolicyName: ClipFinderServiceRoleDefaultPolicyAFBF3421
      Roles:
        - Ref: ClipFinderServiceRole28A544E9
    Metadata:
      aws:cdk:path: Dev-Timestamps/ClipFinder/ServiceRole/DefaultPolicy/Resource
  ClipFinderA73374EE:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 25dc5c988ccacf9c95b198a91678552be9e10ef93bd189781fe0f9044eb3310b.zip
      Role:
        Fn::GetAtt:
          - ClipFinderServiceRole28A544E9
          - Arn
      Description: Finds clips with the Pillar Algorithms
      Environment:
        Variables:
          BUCKET:
            Ref: MessageStore60E7AFC8
          TWITCH_CLIENT_ID: 2nakqoqdxka9v5oekyo6742bmnxt2o
          TWITCH_CLIENT_SECRET_ARN: arn:aws:secretsmanager:us-east-1:576758376358:secret:TWITCH_CLIENT_SECRET-OyAp7V
          DB_NAME: dev
          TOPIC:
            Ref: ThumbnailGeneratorTopicFF9CDA5D
      Handler: handler.handler
      MemorySize: 1280
      Runtime: python3.8
      Timeout: 900
    DependsOn:
      - ClipFinderServiceRoleDefaultPolicyAFBF3421
      - ClipFinderServiceRole28A544E9
    Metadata:
      aws:cdk:path: Dev-Timestamps/ClipFinder/Resource
      aws:asset:path: /home/chandler/Documents/pillar/timestamps/cdk.out/asset.25dc5c988ccacf9c95b198a91678552be9e10ef93bd189781fe0f9044eb3310b
      aws:asset:property: Code
  CCCFinderServiceRoleCE3B78F6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Dev-Timestamps/CCCFinder/ServiceRole/Resource
  CCCFinderServiceRoleDefaultPolicyED0B32B3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource: arn:aws:secretsmanager:us-east-1:576758376358:secret:TWITCH_CLIENT_SECRET-OyAp7V
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource: arn:aws:secretsmanager:us-east-1:576758376358:secret:MONGODB_FULL_URI-DBSAtt
        Version: "2012-10-17"
      PolicyName: CCCFinderServiceRoleDefaultPolicyED0B32B3
      Roles:
        - Ref: CCCFinderServiceRoleCE3B78F6
    Metadata:
      aws:cdk:path: Dev-Timestamps/CCCFinder/ServiceRole/DefaultPolicy/Resource
  CCCFinder4C010E91:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c048644b2e9af2e572143b030709d757a285177c1d8d479a4ae5b03b8c2966e3.zip
      Role:
        Fn::GetAtt:
          - CCCFinderServiceRoleCE3B78F6
          - Arn
      Description: Finds CCC on Twitch
      Environment:
        Variables:
          TWITCH_CLIENT_ID: 2nakqoqdxka9v5oekyo6742bmnxt2o
          TWITCH_CLIENT_SECRET_ARN: arn:aws:secretsmanager:us-east-1:576758376358:secret:TWITCH_CLIENT_SECRET-OyAp7V
          DB_NAME: dev
      Handler: handler.handler
      MemorySize: 256
      Runtime: python3.8
      Timeout: 60
    DependsOn:
      - CCCFinderServiceRoleDefaultPolicyED0B32B3
      - CCCFinderServiceRoleCE3B78F6
    Metadata:
      aws:cdk:path: Dev-Timestamps/CCCFinder/Resource
      aws:asset:path: /home/chandler/Documents/pillar/timestamps/cdk.out/asset.c048644b2e9af2e572143b030709d757a285177c1d8d479a4ae5b03b8c2966e3
      aws:asset:property: Code
  CCCFinderAllowInvokeDevTimestampsvodDataRequestedC83CEE1B8BDAD75C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CCCFinder4C010E91
          - Arn
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: vodDataRequestedFA4189D1
    Metadata:
      aws:cdk:path: Dev-Timestamps/CCCFinder/AllowInvoke:DevTimestampsvodDataRequestedC83CEE1B
  CCCFindervodDataRequested4589FCA5:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      TopicArn:
        Ref: vodDataRequestedFA4189D1
      Endpoint:
        Fn::GetAtt:
          - CCCFinder4C010E91
          - Arn
    Metadata:
      aws:cdk:path: Dev-Timestamps/CCCFinder/vodDataRequested/Resource
  ManualClipServiceRole39F53868:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Dev-Timestamps/ManualClip/ServiceRole/Resource
  ManualClipServiceRoleDefaultPolicyCDB33E8E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource: arn:aws:secretsmanager:us-east-1:576758376358:secret:TWITCH_CLIENT_SECRET-OyAp7V
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource: arn:aws:secretsmanager:us-east-1:576758376358:secret:MONGODB_FULL_URI-DBSAtt
        Version: "2012-10-17"
      PolicyName: ManualClipServiceRoleDefaultPolicyCDB33E8E
      Roles:
        - Ref: ManualClipServiceRole39F53868
    Metadata:
      aws:cdk:path: Dev-Timestamps/ManualClip/ServiceRole/DefaultPolicy/Resource
  ManualClipD684F488:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 99818aa195949293beb7ed5e320ed8cb5699a62c83c2847a2f9191f5c98d41f8.zip
      Role:
        Fn::GetAtt:
          - ManualClipServiceRole39F53868
          - Arn
      Description: Allows manual clipping
      Environment:
        Variables:
          TWITCH_CLIENT_ID: 2nakqoqdxka9v5oekyo6742bmnxt2o
          TWITCH_CLIENT_SECRET_ARN: arn:aws:secretsmanager:us-east-1:576758376358:secret:TWITCH_CLIENT_SECRET-OyAp7V
          DB_NAME: dev
      Handler: handler.handler
      MemorySize: 256
      Runtime: python3.8
      Timeout: 120
    DependsOn:
      - ManualClipServiceRoleDefaultPolicyCDB33E8E
      - ManualClipServiceRole39F53868
    Metadata:
      aws:cdk:path: Dev-Timestamps/ManualClip/Resource
      aws:asset:path: /home/chandler/Documents/pillar/timestamps/cdk.out/asset.99818aa195949293beb7ed5e320ed8cb5699a62c83c2847a2f9191f5c98d41f8
      aws:asset:property: Code
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Dev-Timestamps/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      Roles:
        - Ref: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: Dev-Timestamps/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)
      Code:
        ZipFile: |-
          exports.handler = (event, context) => {
              // eslint-disable-next-line @typescript-eslint/no-require-imports, import/no-extraneous-dependencies
              const s3 = new (require('aws-sdk').S3)();
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const https = require('https');
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const url = require('url');
              log(JSON.stringify(event, undefined, 2));
              const props = event.ResourceProperties;
              if (event.RequestType === 'Delete') {
                  props.NotificationConfiguration = {}; // this is how you clean out notifications
              }
              const req = {
                  Bucket: props.BucketName,
                  NotificationConfiguration: props.NotificationConfiguration,
              };
              return s3.putBucketNotificationConfiguration(req, (err, data) => {
                  log({ err, data });
                  if (err) {
                      return submitResponse('FAILED', err.message + `\nMore information in CloudWatch Log Stream: ${context.logStreamName}`);
                  }
                  else {
                      return submitResponse('SUCCESS');
                  }
              });
              function log(obj) {
                  console.error(event.RequestId, event.StackId, event.LogicalResourceId, obj);
              }
              // eslint-disable-next-line max-len
              // adapted from https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-cfnresponsemodule
              // to allow sending an error message as a reason.
              function submitResponse(responseStatus, reason) {
                  const responseBody = JSON.stringify({
                      Status: responseStatus,
                      Reason: reason || 'See the details in CloudWatch Log Stream: ' + context.logStreamName,
                      PhysicalResourceId: event.PhysicalResourceId || event.LogicalResourceId,
                      StackId: event.StackId,
                      RequestId: event.RequestId,
                      LogicalResourceId: event.LogicalResourceId,
                      NoEcho: false,
                  });
                  log({ responseBody });
                  const parsedUrl = url.parse(event.ResponseURL);
                  const options = {
                      hostname: parsedUrl.hostname,
                      port: 443,
                      path: parsedUrl.path,
                      method: 'PUT',
                      headers: {
                          'content-type': '',
                          'content-length': responseBody.length,
                      },
                  };
                  const request = https.request(options, (r) => {
                      log({ statusCode: r.statusCode, statusMessage: r.statusMessage });
                      context.done();
                  });
                  request.on('error', (error) => {
                      log({ sendError: error });
                      context.done();
                  });
                  request.write(responseBody);
                  request.end();
              }
          };
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
          - Arn
      Runtime: nodejs12.x
      Timeout: 300
    DependsOn:
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: Dev-Timestamps/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAA01Ry27DIBD8lt7xRlbUSL21SRWpl8py+gMEb1P8YC0WUlnI/17wqznNMszuLEMOL8+QP73KX85U1eyCIosQLk6qRpzIsLNeOXH6NiUyeatQvDGji4KbNjexsVER5ZV2mswo0rjAewhHrxqc+udqFK3srpWEEKkCbaeZY0cSnL1RqVu8U1Taj07ecOVGwYYhfFGvVdLOxcVfWVndu2XC43k1yoKhCmuGzwk2k35wP2SgmODfRssOQknt9KAJC2q1GtJxruIq+0ymDBimKAQquxIPq293UGJPrB3Z4SgZBd7RRGko/eIScYyRzROWYEeR1oaad/f8AIf4RTVrnVlvnO4Qyhn/AFDhl26+AQAA
    Metadata:
      aws:cdk:path: Dev-Timestamps/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store.
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 4 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

