Resources:
  MessageStore60E7AFC8:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: SlStack/MessageStore/Resource
  MessageStoreNotifications0C91F785:
    Type: Custom::S3BucketNotifications
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
          - Arn
      BucketName:
        Ref: MessageStore60E7AFC8
      NotificationConfiguration:
        LambdaFunctionConfigurations:
          - Events:
              - s3:ObjectCreated:*
            LambdaFunctionArn:
              Fn::GetAtt:
                - ClipFinderA73374EE
                - Arn
    DependsOn:
      - MessageStoreAllowBucketNotificationsToSlStackClipFinder8D45DF29748CA02E
    Metadata:
      aws:cdk:path: SlStack/MessageStore/Notifications/Resource
  MessageStoreAllowBucketNotificationsToSlStackClipFinder8D45DF29748CA02E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ClipFinderA73374EE
          - Arn
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::GetAtt:
          - MessageStore60E7AFC8
          - Arn
    Metadata:
      aws:cdk:path: SlStack/MessageStore/AllowBucketNotificationsToSlStackClipFinder8D45DF29
  ReadyForDownloadsEEACEEFF:
    Type: AWS::SNS::Topic
    Metadata:
      aws:cdk:path: SlStack/ReadyForDownloads/Resource
  VodPollerServiceRole369446BC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SlStack/VodPoller/ServiceRole/Resource
  VodPollerServiceRoleDefaultPolicy1E3562C9:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - MessageStore60E7AFC8
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MessageStore60E7AFC8
                        - Arn
                    - /*
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource: arn:aws:secretsmanager:us-east-1:576758376358:secret:TWITCH_CLIENT_SECRET-OyAp7V
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource: arn:aws:secretsmanager:us-east-1:576758376358:secret:MONGODB_FULL_URI-DBSAtt
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: ReadyForDownloadsEEACEEFF
        Version: "2012-10-17"
      PolicyName: VodPollerServiceRoleDefaultPolicy1E3562C9
      Roles:
        - Ref: VodPollerServiceRole369446BC
    Metadata:
      aws:cdk:path: SlStack/VodPoller/ServiceRole/DefaultPolicy/Resource
  VodPoller741EDAA0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters634ded3c38fede8064085493921a054cd782a4d401448c73b6769c5ee80aa21bS3Bucket917971FD
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters634ded3c38fede8064085493921a054cd782a4d401448c73b6769c5ee80aa21bS3VersionKey630CC148
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters634ded3c38fede8064085493921a054cd782a4d401448c73b6769c5ee80aa21bS3VersionKey630CC148
      Role:
        Fn::GetAtt:
          - VodPollerServiceRole369446BC
          - Arn
      Environment:
        Variables:
          BUCKET:
            Ref: MessageStore60E7AFC8
          TWITCH_CLIENT_ID: 2nakqoqdxka9v5oekyo6742bmnxt2o
          TOPIC:
            Ref: ReadyForDownloadsEEACEEFF
      Handler: handler.main
      MemorySize: 1000
      Runtime: nodejs14.x
      Timeout: 900
    DependsOn:
      - VodPollerServiceRoleDefaultPolicy1E3562C9
      - VodPollerServiceRole369446BC
    Metadata:
      aws:cdk:path: SlStack/VodPoller/Resource
      aws:asset:path: /Users/russell/pillar/sl/lambdas/poller
      aws:asset:property: Code
  CheckForVods8A3957E1:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(*/5 * * * ? *)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - VodPoller741EDAA0
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: SlStack/CheckForVods/Resource
  CheckForVodsAllowEventRuleSlStackVodPollerF5ED207F25C13A6D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - VodPoller741EDAA0
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - CheckForVods8A3957E1
          - Arn
    Metadata:
      aws:cdk:path: SlStack/CheckForVods/AllowEventRuleSlStackVodPollerF5ED207F
  DownloadHandlerServiceRole4B8FD2FF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SlStack/DownloadHandler/ServiceRole/Resource
  DownloadHandlerServiceRoleDefaultPolicy4A78C071:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:PutObject
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - MessageStore60E7AFC8
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MessageStore60E7AFC8
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: DownloadHandlerServiceRoleDefaultPolicy4A78C071
      Roles:
        - Ref: DownloadHandlerServiceRole4B8FD2FF
    Metadata:
      aws:cdk:path: SlStack/DownloadHandler/ServiceRole/DefaultPolicy/Resource
  DownloadHandler09CC40DB:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters79f614ef9cfe6e50566b6e3611849d0e41d6a370dd644e4bd0053fee569e00ceS3Bucket9787875F
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters79f614ef9cfe6e50566b6e3611849d0e41d6a370dd644e4bd0053fee569e00ceS3VersionKey350110C4
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters79f614ef9cfe6e50566b6e3611849d0e41d6a370dd644e4bd0053fee569e00ceS3VersionKey350110C4
      Role:
        Fn::GetAtt:
          - DownloadHandlerServiceRole4B8FD2FF
          - Arn
      Environment:
        Variables:
          BUCKET:
            Ref: MessageStore60E7AFC8
      Handler: handler.main
      MemorySize: 500
      Runtime: nodejs14.x
      Timeout: 900
    DependsOn:
      - DownloadHandlerServiceRoleDefaultPolicy4A78C071
      - DownloadHandlerServiceRole4B8FD2FF
    Metadata:
      aws:cdk:path: SlStack/DownloadHandler/Resource
      aws:asset:path: /Users/russell/pillar/sl/lambdas/downloader
      aws:asset:property: Code
  DownloadHandlerAllowInvokeSlStackReadyForDownloads8DCF2BE93A9C74E7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DownloadHandler09CC40DB
          - Arn
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: ReadyForDownloadsEEACEEFF
    Metadata:
      aws:cdk:path: SlStack/DownloadHandler/AllowInvoke:SlStackReadyForDownloads8DCF2BE9
  DownloadHandlerReadyForDownloadsE6380D4D:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      TopicArn:
        Ref: ReadyForDownloadsEEACEEFF
      Endpoint:
        Fn::GetAtt:
          - DownloadHandler09CC40DB
          - Arn
    Metadata:
      aws:cdk:path: SlStack/DownloadHandler/ReadyForDownloads/Resource
  ClipFinderServiceRole28A544E9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SlStack/ClipFinder/ServiceRole/Resource
  ClipFinderServiceRoleDefaultPolicyAFBF3421:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - MessageStore60E7AFC8
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - MessageStore60E7AFC8
                        - Arn
                    - /*
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource: arn:aws:secretsmanager:us-east-1:576758376358:secret:MONGODB_FULL_URI-DBSAtt
        Version: "2012-10-17"
      PolicyName: ClipFinderServiceRoleDefaultPolicyAFBF3421
      Roles:
        - Ref: ClipFinderServiceRole28A544E9
    Metadata:
      aws:cdk:path: SlStack/ClipFinder/ServiceRole/DefaultPolicy/Resource
  ClipFinderA73374EE:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersbefd61f1099784eed54a8fa97d8d5c4ec7423a2e062d331d7424e65b35de6e51S3Bucket2849E465
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbefd61f1099784eed54a8fa97d8d5c4ec7423a2e062d331d7424e65b35de6e51S3VersionKey936AA917
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbefd61f1099784eed54a8fa97d8d5c4ec7423a2e062d331d7424e65b35de6e51S3VersionKey936AA917
      Role:
        Fn::GetAtt:
          - ClipFinderServiceRole28A544E9
          - Arn
      Environment:
        Variables:
          BUCKET:
            Ref: MessageStore60E7AFC8
      Handler: handler.main
      MemorySize: 10240
      Runtime: nodejs14.x
      Timeout: 900
    DependsOn:
      - ClipFinderServiceRoleDefaultPolicyAFBF3421
      - ClipFinderServiceRole28A544E9
    Metadata:
      aws:cdk:path: SlStack/ClipFinder/Resource
      aws:asset:path: /Users/russell/pillar/sl/lambdas/clipfinder
      aws:asset:property: Code
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: SlStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      Roles:
        - Ref: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: SlStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)
      Code:
        ZipFile: |-
          exports.handler = (event, context) => {
              // eslint-disable-next-line @typescript-eslint/no-require-imports, import/no-extraneous-dependencies
              const s3 = new (require('aws-sdk').S3)();
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const https = require('https');
              // eslint-disable-next-line @typescript-eslint/no-require-imports
              const url = require('url');
              log(JSON.stringify(event, undefined, 2));
              const props = event.ResourceProperties;
              if (event.RequestType === 'Delete') {
                  props.NotificationConfiguration = {}; // this is how you clean out notifications
              }
              const req = {
                  Bucket: props.BucketName,
                  NotificationConfiguration: props.NotificationConfiguration,
              };
              return s3.putBucketNotificationConfiguration(req, (err, data) => {
                  log({ err, data });
                  if (err) {
                      return submitResponse('FAILED', err.message + `\nMore information in CloudWatch Log Stream: ${context.logStreamName}`);
                  }
                  else {
                      return submitResponse('SUCCESS');
                  }
              });
              function log(obj) {
                  console.error(event.RequestId, event.StackId, event.LogicalResourceId, obj);
              }
              // eslint-disable-next-line max-len
              // adapted from https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-cfnresponsemodule
              // to allow sending an error message as a reason.
              function submitResponse(responseStatus, reason) {
                  const responseBody = JSON.stringify({
                      Status: responseStatus,
                      Reason: reason || 'See the details in CloudWatch Log Stream: ' + context.logStreamName,
                      PhysicalResourceId: event.PhysicalResourceId || event.LogicalResourceId,
                      StackId: event.StackId,
                      RequestId: event.RequestId,
                      LogicalResourceId: event.LogicalResourceId,
                      NoEcho: false,
                  });
                  log({ responseBody });
                  const parsedUrl = url.parse(event.ResponseURL);
                  const options = {
                      hostname: parsedUrl.hostname,
                      port: 443,
                      path: parsedUrl.path,
                      method: 'PUT',
                      headers: {
                          'content-type': '',
                          'content-length': responseBody.length,
                      },
                  };
                  const request = https.request(options, (r) => {
                      log({ statusCode: r.statusCode, statusMessage: r.statusMessage });
                      context.done();
                  });
                  request.on('error', (error) => {
                      log({ sendError: error });
                      context.done();
                  });
                  request.write(responseBody);
                  request.end();
              }
          };
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
          - Arn
      Runtime: nodejs12.x
      Timeout: 300
    DependsOn:
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: SlStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE01QQU4DMQx8S+9el6XiwA2oxLna8oHUayp3d5MqTopQlL+TZCniNDPWzMh2j89P2G9ezJd2NE7bRM4zpmMwNMHeWQ0+UoD9px1YXfTE8KrKoRjOYs/wNy2Og/Fm4cC+ipIdJYizGWp30h2mt0gTt7KVZZjNchoNpppmv4hqScB7tFSj1XnnGdQqpg93FarzlRzjScnL9e7+rzOIWTANbm7bNTy4Wei7LdtYad11ph6k2O4CvrEtIg3xN1Yw5wzWjYwX3d768q9HfNhcVKTz0QZZGIcVfwAnMh01TgEAAA==
    Metadata:
      aws:cdk:path: SlStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters634ded3c38fede8064085493921a054cd782a4d401448c73b6769c5ee80aa21bS3Bucket917971FD:
    Type: String
    Description: S3 bucket for asset "634ded3c38fede8064085493921a054cd782a4d401448c73b6769c5ee80aa21b"
  AssetParameters634ded3c38fede8064085493921a054cd782a4d401448c73b6769c5ee80aa21bS3VersionKey630CC148:
    Type: String
    Description: S3 key for asset version "634ded3c38fede8064085493921a054cd782a4d401448c73b6769c5ee80aa21b"
  AssetParameters634ded3c38fede8064085493921a054cd782a4d401448c73b6769c5ee80aa21bArtifactHash77D96A65:
    Type: String
    Description: Artifact hash for asset "634ded3c38fede8064085493921a054cd782a4d401448c73b6769c5ee80aa21b"
  AssetParameters79f614ef9cfe6e50566b6e3611849d0e41d6a370dd644e4bd0053fee569e00ceS3Bucket9787875F:
    Type: String
    Description: S3 bucket for asset "79f614ef9cfe6e50566b6e3611849d0e41d6a370dd644e4bd0053fee569e00ce"
  AssetParameters79f614ef9cfe6e50566b6e3611849d0e41d6a370dd644e4bd0053fee569e00ceS3VersionKey350110C4:
    Type: String
    Description: S3 key for asset version "79f614ef9cfe6e50566b6e3611849d0e41d6a370dd644e4bd0053fee569e00ce"
  AssetParameters79f614ef9cfe6e50566b6e3611849d0e41d6a370dd644e4bd0053fee569e00ceArtifactHash243BF3D6:
    Type: String
    Description: Artifact hash for asset "79f614ef9cfe6e50566b6e3611849d0e41d6a370dd644e4bd0053fee569e00ce"
  AssetParametersbefd61f1099784eed54a8fa97d8d5c4ec7423a2e062d331d7424e65b35de6e51S3Bucket2849E465:
    Type: String
    Description: S3 bucket for asset "befd61f1099784eed54a8fa97d8d5c4ec7423a2e062d331d7424e65b35de6e51"
  AssetParametersbefd61f1099784eed54a8fa97d8d5c4ec7423a2e062d331d7424e65b35de6e51S3VersionKey936AA917:
    Type: String
    Description: S3 key for asset version "befd61f1099784eed54a8fa97d8d5c4ec7423a2e062d331d7424e65b35de6e51"
  AssetParametersbefd61f1099784eed54a8fa97d8d5c4ec7423a2e062d331d7424e65b35de6e51ArtifactHash2C7AF4AF:
    Type: String
    Description: Artifact hash for asset "befd61f1099784eed54a8fa97d8d5c4ec7423a2e062d331d7424e65b35de6e51"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

